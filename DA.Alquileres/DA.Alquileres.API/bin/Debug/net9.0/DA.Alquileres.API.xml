<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DA.Alquileres.API</name>
    </assembly>
    <members>
        <member name="T:DA.Alquileres.API.Controllers.LoginController">
            <summary>
            Controlador que permite identificarse al usuario
            </summary>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.LoginController.#ctor(DA.Alquileres.IServices.IUsuarioServices,AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Contructor
            </summary>
            <param name="services">Contiene los métodos</param>
            <param name="mapper">Sirve para mapear los objetos</param>
            <param name="configuration">Sirve para obtener datos de appsetting</param>
        </member>
        <member name="T:DA.Alquileres.API.Controllers.UsuarioController">
            <summary>
            Controlador de la clase Usuarios
            </summary>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.#ctor(DA.Alquileres.IServices.IUsuarioServices,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="services">representa a la clase que contiene las reglas del negocio</param>
            <param name="mapper">clase para el mapeo de los DTO</param>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.GetAll">
            <summary>
            Obtiene la lista de usuarios registraados
            </summary>
            <returns>muestra una lista</returns>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.GetLista">
            <summary>
            Lista los usuarios
            </summary>
            <returns>Muestra la lista de usuarios directamente</returns>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.GetById(System.Int32)">
            <summary>
            Busqueda de un usuario específico
            </summary>
            <param name="id">Llave primaria</param>
            <returns></returns>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.Create(DA.Alquileres.DTO.Usuario.UsuarioNuevoDTO)">
            <summary>
            Creacion de un nuevo usuario
            </summary>
            <param name="usuario">datos del nuevo usuario a crear</param>
            <returns></returns>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.Update(DA.Alquileres.DTO.Usuario.UsuarioActualizarDTO,System.Int32)">
            <summary>
            Actualización de un usuario
            </summary>
            <param name="usuario">Datos a actualizar del usuario</param>
            <param name="id">Llave primaria</param>
            <returns></returns>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Eliminación de un usuario
            </summary>
            <param name="id">Llave primaria</param>
            <returns></returns>
        </member>
        <member name="M:DA.Alquileres.API.Controllers.UsuarioController.Patch(DA.Alquileres.DTO.Usuario.UsuarioActualizarDTO,System.Int32)">
            <summary>
            Actualización parcial de un usuario
            </summary>
            <param name="usuario">Datos a actualizar de un usuario</param>
            <param name="id">Llave primaria</param>
            <returns></returns>
        </member>
        <member name="T:DA.Alquileres.API.ServicesInyeccionDependenciesExtensions">
            <summary>
            Clase para agregar las inyecion de dependencias
            </summary>
        </member>
        <member name="M:DA.Alquileres.API.ServicesInyeccionDependenciesExtensions.AddMyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Método para registrar las inyecciones de dependencia
            </summary>
            <param name="services">services del program</param>
            <returns></returns>
        </member>
        <member name="T:DA.Alquileres.API.ServicesValidationExtensions">
            <summary>
            Clase para registrar las clases de validación
            </summary>
        </member>
        <member name="M:DA.Alquileres.API.ServicesValidationExtensions.AddMyValidations(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Método para registrar las clases de validación
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:DA.Alquileres.API.Validadores.UsuarioNuevoDTOValidador">
            <summary>
            Clase que valida a la entidad
            </summary>
        </member>
        <member name="M:DA.Alquileres.API.Validadores.UsuarioNuevoDTOValidador.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
    </members>
</doc>
